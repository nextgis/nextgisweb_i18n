#
msgid ""
msgstr ""

#: api.py:46
#, server
msgid "Output format is not provided."
msgstr "Фармат вываду не прадугледжаны."

#: api.py:49
#, python-format, server
msgid "Format '%s' is not supported."
msgstr "Фармат '%s' не падтрымліваецца."

#: api.py:94
#, server
msgid "Requested raster is not COG."
msgstr "Запытаны растр не з'яўляецца COG."

#: api.py:106
#, server
msgid "Range header is missed or invalid."
msgstr "Загаловак дыяпазону адсутнічае або несапраўдны."

#: api.py:110
#, python-format, server
msgid "Range %s can not be read."
msgstr "Немагчыма прачытаць дыяпазон %s."

#: kind_of_data.py:8
#, server
msgid "Rasters and pyramids"
msgstr "Растры і піраміды"

#: model.py:69 nodepkg/editor-widget/EditorWidget.tsx:47 view.py:58
#, jsrealm, server
msgid "Raster layer"
msgstr "Растравы слой"

#: model.py:101
#, server
msgid "GDAL library was unable to open the file."
msgstr "Бібліятэцы GDAL не ўдалося адкрыць файл."

#: model.py:109
#, python-format, server
msgid ""
"Raster has format '%(format)s', however only following formats are "
"supported: %(all_formats)s."
msgstr ""
"Растр мае фармат '%(format)s', аднак падтрымліваюцца толькі наступныя "
"фарматы: %(all_formats)s."

#: model.py:116
#, server
msgid "Raster files without projection info are not supported."
msgstr "Растравыя файлы без інфармацыі аб праекцыі не падтрымліваюцца."

#: model.py:135
#, server
msgid "Mixed band data types are not supported."
msgstr "Змешаныя тыпы даных каналоў не падтрымліваюцца."

#: model.py:163
#, server
msgid "GDAL was uanble to parse the raster coordinate system."
msgstr "Бібліятэкцы GDAL не ўдалося парсераваць каардынацый сэрвіс растра."

#: model.py:167
#, server
msgid ""
"The source raster has a local coordinate system and can't be reprojected to "
"the target coordinate system."
msgstr ""
"Крынічны растр мае лакальны каардынацый сэрвіс і не можна быць "
"рэепраекцаваны у мэтавы каардынацый сэрвіс."

#: model.py:184
#, server
msgid "Failed to reproject the raster to the target coordinate system."
msgstr "Не удалося рээпраекцаваць растр у мэтавы каардынацый сэрвіс."

#: model.py:187
#, python-format, server
msgid "GDAL error message: %s"
msgstr "Памылка GDAL: %s"

#: model.py:203
#, python-format, server
msgid ""
"The uncompressed raster size (%(size)s) exceeds the limit (%(limit)s) by "
"%(delta)s. Reduce raster size to fit the limit."
msgstr ""
"Нескампрэсаваны размер растра (%(size)s) перавышае ліміт (%(limit)s) на "
"%(delta)s. Зменшыце размер растра, каб уклаєцца у ліміт."

#: model.py:315
#, server
msgid "Data type"
msgstr "Тып даных"

#: model.py:316
#, server
msgid "COG"
msgstr "COG"

#: nodepkg/editor-widget/EditorWidget.tsx:16
#, jsrealm
msgid "Select a dataset"
msgstr "Выберыце набор даных"

#: nodepkg/editor-widget/EditorWidget.tsx:17
#, jsrealm
msgid "Dataset should be in GeoTIFF format."
msgstr "Набор даных павінен быць у фармаце GeoTIFF."

#: nodepkg/editor-widget/EditorWidget.tsx:39
#, jsrealm
msgid "Cloud Optimized GeoTIFF (COG)"
msgstr "Аптымізаваны для воблака GeoTIFF (COG)"

#: nodepkg/export-form/ExportForm.tsx:55
#, jsrealm
msgid "Band"
msgstr "Канал"

#: nodepkg/export-form/ExportForm.tsx:79
#, jsrealm
msgid "Format"
msgstr "Фармат"

#: nodepkg/export-form/ExportForm.tsx:91
#, jsrealm
msgid "SRS"
msgstr "SRS"

#: nodepkg/export-form/ExportForm.tsx:96
#, jsrealm
msgid "Bands"
msgstr "Каналы"

#: nodepkg/export-form/ExportForm.tsx:129
#, jsrealm
msgid "Save"
msgstr "Захаваць"

#: view.py:25 view.py:63
#, server
msgid "Save as"
msgstr "Захаваць як"

#: view.py:33
#, server
msgid "Cloud Optimized GeoTIFF"
msgstr "Аптымізаваны для воблака GeoTIFF"

#: view.py:34
#, server
msgid ""
"A Cloud Optimized GeoTIFF (COG) is a regular GeoTIFF file, aimed at being "
"hosted on a HTTP file server, with an internal organization that enables "
"more efficient workflows on the cloud. It does this by leveraging the "
"ability of clients issuing ​HTTP GET range requests to ask for just the "
"parts of a file they need."
msgstr ""
"Cloud Optimized GeoTIFF (COG) - гэта звычайны файл GeoTIFF, прызначаны для "
"размяшчэння на файлавым серверы HTTP з унутранай арганізацыяй, якая дазваляе"
" больш эфектыўна працаваць у воблаку. Ён робіць гэта, выкарыстоўваючы "
"магчымасць кліентаў, якія выдаюць запыты дыяпазону HTTP GET, запытваць "
"толькі тыя часткі файла, якія ім патрэбны."

#: view.py:69
#, server
msgid "Download"
msgstr "Скачаць"
