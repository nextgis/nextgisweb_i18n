#: api.py:124 api.py:145
msgid "Requested raster is not COG."
msgstr "El ráster solicitado no es COG."

#: api.py:149
msgid "Range header is missed or invalid."
msgstr "El encabezado 'Range' se omite o no es válido."

#: api.py:153
#, python-format
msgid "Range %s can not be read."
msgstr "El rango %s no se puede leer."

#: kind_of_data.py:8
msgid "Rasters and pyramids"
msgstr "Rásteres y pirámides"

#: model.py:71 nodepkg/editor-widget/EditorWidget.tsx:46 view.py:61
msgid "Raster layer"
msgstr "Capa raster"

#: model.py:113
msgid "No supported files found in the archive."
msgstr ""

#: model.py:116
msgid "The archive contains multiple supported files: {supported_zip_items}."
msgstr ""

#: model.py:132
msgid "GDAL library was unable to open the file."
msgstr "La libreria GDAL no pudo abrir el archivo."

#: model.py:139
msgid "Raster files without projection info are not supported."
msgstr "No se admiten archivos ráster sin información de proyección."

#: model.py:159
msgid "Mixed band data types are not supported."
msgstr "Los tipos de datos de canales mixtos no son compatibles."

#: model.py:202
msgid "GDAL was uanble to parse the raster coordinate system."
msgstr "GDAL no pudo analizar el sistema de coordenadas del ráster."

#: model.py:207
msgid ""
"The source raster has a local coordinate system and can't be reprojected to "
"the target coordinate system."
msgstr ""
"El ráster de origen tiene un sistema de coordenadas local y no se puede "
"reproyectar al sistema de coordenadas de destino."

#: model.py:225
msgid "Failed to reproject the raster to the target coordinate system."
msgstr "No se pudo reproyectar el ráster en el sistema de coordenadas de destino."

#: model.py:230
#, python-format
msgid "GDAL error message: %s"
msgstr "Mensaje de error GDAL: %s"

#: model.py:245
msgid ""
"The uncompressed raster size ({size}) exceeds the limit ({limit}) by {delta}."
" Reduce raster size to fit the limit."
msgstr ""

#: model.py:380
msgid "{n} band with {t} data type"
msgid_plural "{n} bands with {t} data type"
msgstr[0] ""
msgstr[1] ""

#: model.py:387
msgid "Band summary"
msgstr ""

#: model.py:388
msgid "Pixel dimensions"
msgstr ""

#: model.py:389 nodepkg/editor-widget/EditorWidget.tsx:37
msgid "Cloud Optimized GeoTIFF (COG)"
msgstr "Cloud Optimized GeoTIFF (COG)"

#: model.py:390
msgid "Persistent auxiliary metadata (PAM)"
msgstr ""

#: nodepkg/editor-widget/EditorWidget.tsx:13
msgid "Select a dataset"
msgstr "Seleccione un set de datos"

#: nodepkg/editor-widget/EditorWidget.tsx:14
msgid ""
"Supported formats: GeoTIFF, JPEG, and PNG with GDAL PAM metadata (.aux.xml "
"files). Multi-file datasets should be uploaded as ZIP archives."
msgstr ""

#: nodepkg/export-form/ExportForm.tsx:58
msgid "Band"
msgstr "Canal"

#: nodepkg/export-form/ExportForm.tsx:82
msgid "Format"
msgstr "Formato"

#: nodepkg/export-form/ExportForm.tsx:94
msgid "SRS"
msgstr "SRS"

#: nodepkg/export-form/ExportForm.tsx:99
msgid "Bands"
msgstr "Canales"

#: nodepkg/export-form/ExportForm.tsx:132
msgid "Save"
msgstr "Guardar"

#: view.py:26 view.py:66
msgid "Save as"
msgstr "Guardar como"

#: view.py:33
msgid "Cloud Optimized GeoTIFF"
msgstr "Cloud Optimized GeoTIFF"

#: view.py:34
msgid ""
"A Cloud Optimized GeoTIFF (COG) is a regular GeoTIFF file, aimed at being "
"hosted on a HTTP file server, with an internal organization that enables more"
" efficient workflows on the cloud. It does this by leveraging the ability of "
"clients issuing ​HTTP GET range requests to ask for just the parts of a file "
"they need."
msgstr ""
"Un Cloud Optimized GeoTIFF (COG) es un archivo GeoTIFF normal, destinado a "
"ser alojado en un servidor de archivos HTTP, con una organización interna que"
" permite flujos de trabajo más eficientes en la nube. Lo hace aprovechando la"
" capacidad de los clientes que emiten solicitudes de rango HTTP GET para "
"solicitar solo las partes de un archivo que necesitan."

#: view.py:72
msgid "Download"
msgstr "Descargar"
